# Функционалност на контролерите

1. **AccountController**: Контролерът за акаунти управлява потребителската автентикация, включително регистрация, вход и изход, както и управление на отказан достъп. Използва ASP.NET Core Identity за управление на потребителски акаунти и роли.

2. **ActorsController**: Контролерът за актьори управлява CRUD операции за актьори, включително изброяване на всички актьори, преглед на детайли, създаване, редактиране и изтриване на записи за актьори. Ограничават се повечето действия до администратори, като се позволява анонимно достъп до списъка и детайлите на актьорите.

3. **AdminResetController**: Контролерът за нулиране на администраторски пароли предоставя функционалност за нулиране на паролата на администраторския потребител. Включва крайна точка, която генерира токен за нулиране на парола и задава нова парола за администраторския потребител, ако бъде намерен.

4. **CinemasController**: Контролерът за кина управлява CRUD операции за кина, включително изброяване на всички кина, преглед на детайли, създаване, редактиране и изтриване на записи за кина. Ограничават се повечето действия до администратори, като се позволява анонимно достъп до списъка и детайлите на кината.

5. **MoviesController**: Контролерът за филми управлява CRUD операции за филми, включително изброяване на всички филми, преглед на детайли, създаване, редактиране и филтриране на филми. Ограничават се повечето действия до администратори, като се позволява анонимно достъп до списъка, детайлите и търсенето на филми.

6. **OrdersController**: Контролерът за поръчки управлява пазарската количка и обработката на поръчки, включително преглед на пазарската количка, добавяне и премахване на артикули и завършване на поръчки. Осигурява, че само упълномощени потребители могат да достъпват тези функционалности.

7. **ProducersController**: Контролерът за продуценти управлява CRUD операции за продуценти, включително изброяване на всички продуценти, преглед на детайли, създаване, редактиране и изтриване на записи за продуценти. Ограничават се повечето действия до администратори, като се позволява анонимно достъп до списъка и детайлите на продуцентите.

8. **_Layout.cshtml**: Вашият `_Layout.cshtml` файл е основният шаблон за оформление на вашето ASP.NET Core MVC приложение. Той съдържа общите HTML структури и ресурси, които се използват на всички страници на сайта. Ето някои ключови елементи:

   - **HTML структура**: Документът започва с декларация за DOCTYPE и основни HTML тагове като `<html>`, `<head>`, и `<body>`.

   - **Метаданни и заглавие**: В `<head>` секцията се задават метаданни като charset и viewport, както и заглавието на страницата, което се извлича от `ViewData["Title"]`.

   - **Външни ресурси**: Включени са външни CSS файлове за Bootstrap и Google Fonts, както и икони от Bootstrap Icons. Включен е и персонализиран CSS файл (`site.css`).

   - **Навигационна лента**: В `<body>` секцията има навигационна лента, която използва Bootstrap за стилизиране. Навигационната лента съдържа връзки към различни контролери и действия, като "Movies", "Cinemas", "Producers", и "Actors". Има условна логика, която показва допълнителни опции за управление, ако потребителят е автентикиран и е администратор.

   - **Форма за търсене**: Включена е форма за търсене на филми, която изпраща заявка към `MoviesController` и действието `Filter`.

   - **Пазарска количка и потребителска идентификация**: Включен е компонент за обобщение на пазарската количка. Включен е частичен изглед за потребителска идентификация (`_Identity.cshtml`).

   - **Основно съдържание**: Основното съдържание на страницата се рендерира в `<main>` таг чрез `@RenderBody()`.

   - **Скриптове**: Включени са JavaScript файлове за jQuery и Bootstrap. Включен е персонализиран JavaScript файл (`site.js`). Има възможност за включване на допълнителни скриптове чрез `@RenderSectionAsync("Scripts", required: false)`.
https://github.com/Targov/WebProject.git

   Този файл служи като основен шаблон, който се използва от всички други изгледи в приложението, осигурявайки консистентен външен вид и усещане на сайта.